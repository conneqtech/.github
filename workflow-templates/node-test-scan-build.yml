name: Build

on:
  push:
    branches:
      - master
      - develop
    tags:
      - '**'
  pull_request:
  workflow_dispatch:

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn --pure-lockfile
      - run: yarn lint --format junit -o test-results/junit/js-lint-results.xml
      - run: JEST_JUNIT_OUTPUT="test-results/junit/js-test-results.xml" TZ="Europe/Amsterdam" yarn test --ci --reporters="jest-junit" --coverageDirectory="test-results"
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: JEST Tests
          path: test-results/junit/js-test-results.xml
          reporter: jest-junit
      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: test-results
  analyse:
    name: Run Sonarscanner
    runs-on: ubuntu-latest
    needs: test
    if:
      github.ref == 'refs/heads/develop' ||
      github.base_ref == 'develop' ||
      startsWith(github.base_ref, 'feature/') ||
      startsWith(github.base_ref, 'stage/')
    steps:
      - uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: code-coverage-report
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn --pure-lockfile
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  build:
    name: Build and push image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Set outputs
        id: vars
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          var='${{ github.head_ref }}'; echo "::set-output name=pr_name::${var//\//-}"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ secrets.AWS_REPOSITORY_PREFIX }}${{ secrets.AWS_REPOSITORY_NAME }}
          tags: |
            type=ref,event=branch
            type=raw,value=${{ steps.vars.outputs.pr_name }},enable=${{ startsWith(github.ref, 'refs/pull/') }}
            type=semver,pattern={{version}}
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: BUILD_HASH=${{ steps.vars.outputs.sha_short }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
